{"version":3,"file":"static/js/781.16643636.chunk.js","mappings":"sLAEO,MAAMA,EAAeC,GAAqBA,EAAMC,MAAMC,MAEhDC,EAAgBH,GAAqBA,EAAMC,MAAMG,Q,sBCG9D,MAYA,EAZgDC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClE,OACEG,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,YACZC,KAAK,SACLL,MAAOA,EACPC,SAAUA,GACV,ECbC,MAAMK,E,OAAcC,GAAOC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECkFvC,EA3EmBC,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXhB,GAAQiB,EAAAA,EAAAA,IAAYnB,GACpBK,GAAUc,EAAAA,EAAAA,IAAYf,IAE5BgB,EAAAA,EAAAA,YAAU,KACRH,GAASI,EAAAA,EAAAA,KAAa,GACrB,CAACJ,IAEJ,MAAMK,EAAgBpB,EAAMqB,QACzBC,GACCA,EAAKZ,KAAKa,cAAcC,SAASrB,EAAQO,KAAKa,gBAC9CD,EAAKG,SAASF,cAAcC,SAASrB,EAAQsB,SAASF,gBACtDD,EAAKI,MAAMH,cAAcC,SAASrB,EAAQuB,MAAMH,gBAChDD,EAAKK,MAAMJ,cAAcC,SAASrB,EAAQwB,MAAMJ,iBAG9CK,EACHC,GACAC,IACCf,GAASgB,EAAAA,EAAAA,GAAU,CAAEF,QAAOxB,MAAOyB,EAAEE,OAAO3B,QAAS,EAGzD,OACEE,EAAAA,EAAAA,KAAA,OAAA0B,UACEC,EAAAA,EAAAA,MAACvB,EAAW,CAAAsB,SAAA,EACVC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,UACJ1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,cACJ1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,WACJ1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,cAENC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE1B,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAAC4B,EAAW,CACV9B,MAAOF,EAAQO,KACfJ,SAAUsB,EAAmB,aAGjCrB,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAAC4B,EAAW,CACV9B,MAAOF,EAAQsB,SACfnB,SAAUsB,EAAmB,iBAGjCrB,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAAC4B,EAAW,CACV9B,MAAOF,EAAQuB,MACfpB,SAAUsB,EAAmB,cAGjCrB,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAAC4B,EAAW,CACV9B,MAAOF,EAAQwB,MACfrB,SAAUsB,EAAmB,oBAKrCrB,EAAAA,EAAAA,KAAA,SAAA0B,SACGb,EAAcgB,KAAKd,IAClBY,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAKX,EAAKZ,QACVH,EAAAA,EAAAA,KAAA,MAAA0B,SAAKX,EAAKG,YACVlB,EAAAA,EAAAA,KAAA,MAAA0B,SAAKX,EAAKI,SACVnB,EAAAA,EAAAA,KAAA,MAAA0B,SAAKX,EAAKK,UAJHL,EAAKe,YAShB,C","sources":["redux/users/selectors.ts","Components/SearchInput/SearchInput.tsx","Components/UsersTable/UserTable.styled.js","Components/UsersTable/UsersTable.tsx"],"sourcesContent":["import { RootState } from \"../store\";\r\n\r\nexport const selectUsers = (state: RootState) => state.users.items;\r\n\r\nexport const selectFilter = (state: RootState) => state.users.filters;\r\n","import React from \"react\";\r\n\r\ninterface SearchInputProps {\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search...\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  color: #333;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n\r\n  td,\r\n  th {\r\n    padding: 12px 15px;\r\n    text-align: left;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n\r\n  thead {\r\n    background-color: #f1f1f1;\r\n  }\r\n\r\n  th {\r\n    font-weight: 600;\r\n    background-color: #a39e90;\r\n    color: #fff;\r\n  }\r\n\r\n  tbody tr {\r\n    transition: background-color 200ms ease;\r\n  }\r\n\r\n  tbody tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  tbody tr:hover {\r\n    background-color: #e9ecef;\r\n  }\r\n\r\n  tbody td {\r\n    border-bottom: 1px solid #e9ecef;\r\n  }\r\n\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { fetchUsers } from \"../../redux/users/operations\";\r\nimport { selectFilter, selectUsers } from \"../../redux/users/selectors\";\r\nimport { setFilter } from \"../../redux/users/slice\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport { StyledTable } from \"./UserTable.styled\";\r\n\r\nconst UsersTable = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const users = useSelector(selectUsers);\r\n  const filters = useSelector(selectFilter);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const filteredUsers = users.filter(\r\n    (user) =>\r\n      user.name.toLowerCase().includes(filters.name.toLowerCase()) &&\r\n      user.username.toLowerCase().includes(filters.username.toLowerCase()) &&\r\n      user.email.toLowerCase().includes(filters.email.toLowerCase()) &&\r\n      user.phone.toLowerCase().includes(filters.phone.toLowerCase())\r\n  );\r\n\r\n  const handleFilterChange =\r\n    (field: keyof typeof filters) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch(setFilter({ field, value: e.target.value }));\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <StyledTable>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n          </tr>\r\n          <tr>\r\n            <th>\r\n              <SearchInput\r\n                value={filters.name}\r\n                onChange={handleFilterChange(\"name\")}\r\n              />\r\n            </th>\r\n            <th>\r\n              <SearchInput\r\n                value={filters.username}\r\n                onChange={handleFilterChange(\"username\")}\r\n              />\r\n            </th>\r\n            <th>\r\n              <SearchInput\r\n                value={filters.email}\r\n                onChange={handleFilterChange(\"email\")}\r\n              />\r\n            </th>\r\n            <th>\r\n              <SearchInput\r\n                value={filters.phone}\r\n                onChange={handleFilterChange(\"phone\")}\r\n              />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <th>{user.name}</th>\r\n              <td>{user.username}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.phone}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </StyledTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersTable;\r\n"],"names":["selectUsers","state","users","items","selectFilter","filters","_ref","value","onChange","_jsx","type","placeholder","name","StyledTable","styled","table","UsersTable","dispatch","useDispatch","useSelector","useEffect","fetchUsers","filteredUsers","filter","user","toLowerCase","includes","username","email","phone","handleFilterChange","field","e","setFilter","target","children","_jsxs","SearchInput","map","id"],"sourceRoot":""}